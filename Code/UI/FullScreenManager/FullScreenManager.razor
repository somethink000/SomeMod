@namespace GeneralGame.UI
@attribute [StyleSheet]
@inherits Panel

<root>
	
		@switch ( ActivePanel )
		{
			case FullScreenPanel.InGameHud:
				<InGameHud/>
				break;
			case FullScreenPanel.Inventory:
				<Inventory/>
				break;
            case FullScreenPanel.SpawnMenu:
				<SpawnMenu/>
				break;
			default:
				throw new ArgumentOutOfRangeException();
		}
	
		
</root>

@code {
	public static FullScreenManager Instance { get; private set; }

	public enum FullScreenPanel
	{
		InGameHud,
		Inventory,
		PauseMenu,
        SpawnMenu,
	}

	public FullScreenPanel ActivePanel { get; private set; } = FullScreenPanel.InGameHud;

	public FullScreenManager()
	{
		Instance = this;
	}

	public void Display( FullScreenPanel panel )
	{
		ActivePanel = panel;
	}

	public override void Tick()
	{
        
		

		if (Input.Pressed(InputButtonHelper.Inventory))
		{
			Toggle( FullScreenPanel.Inventory );
            
        }
        if (Input.Pressed(InputButtonHelper.SpawnMenu))
        {
            Toggle(FullScreenPanel.SpawnMenu);

        }
    }

	private void Toggle( FullScreenPanel panel )
	{
		if ( ActivePanel == panel )
			ActivePanel = FullScreenPanel.InGameHud;
		else
			ActivePanel = panel;
	}

	public static bool Is( FullScreenPanel mode )
		=> FullScreenManager.Instance?.ActivePanel == mode;

	protected override int BuildHash()
	{
		return HashCode.Combine( ActivePanel.GetHashCode() );
	}
}
